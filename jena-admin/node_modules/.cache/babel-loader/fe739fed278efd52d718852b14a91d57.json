{"ast":null,"code":"var _jsxFileName = \"/Users/Jenas/Desktop/Web Dev/React-Projects/jena-admin/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from \"./actions\";\nimport axios from \"axios\";\n\nfunction App() {\n  const isLoggedin = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const authenticate = () => {\n    axios.post(\"login\", {\n      email: email,\n      password: password\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, isLoggedin ? 'Logged in' : 'Not Logged in'), React.createElement(\"input\", {\n    type: \"text\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, email), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, password), React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(login());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Login\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Jenas/Desktop/Web Dev/React-Projects/jena-admin/src/App.js"],"names":["React","useState","useSelector","useDispatch","login","axios","App","isLoggedin","state","dispatch","email","setEmail","password","setPassword","authenticate","post","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACJ,KAAhB,CAA9B;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,QAAD,EAAUC,WAAV,IAAuBZ,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACzBT,IAAAA,KAAK,CAACU,IAAN,CAAW,OAAX,EAAoB;AAClBL,MAAAA,KAAK,EAAEA,KADW;AAElBE,MAAAA,QAAQ,EAAEA;AAFQ,KAApB;AAID,GALD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,UAAU,GAAG,WAAH,GAAiB,eAAhC,CADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEG,KAA1B;AAAiC,IAAA,QAAQ,EAAGM,CAAD,IAAK;AAACL,MAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAAyB,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEN,QAA1B;AAAoC,IAAA,QAAQ,EAAGI,CAAD,IAAK;AAACH,MAAAA,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA4B,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAL,CAJF,EAIkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,QAAL,CAJlB,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACH,MAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AAAkB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF;AASD;;AAED,eAAeE,GAAf","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {login} from \"./actions\"\nimport axios from \"axios\"\n\nfunction App() {\n  const isLoggedin = useSelector(state => state.login)\n  const dispatch = useDispatch()\n  const [email,setEmail] = useState('')\n  const [password,setPassword]=useState('')\n\n  const authenticate = () => {\n    axios.post(\"login\", {\n      email: email,\n      password: password\n    })\n  }\n  return (\n    <div>\n      <h1>{isLoggedin ? 'Logged in' : 'Not Logged in'}</h1>\n      <input type=\"text\" value={email} onChange={(e)=>{setEmail(e.target.value)}} />\n      <input type=\"text\" value={password} onChange={(e)=>{setPassword(e.target.value)}} />\n      <h1>{email}</h1><h1>{password}</h1>\n      <button onClick={() => {dispatch(login())}}>Login</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}